/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AucEngine, AucEngineInterface } from "../../contracts/AucEngine";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
    ],
    name: "VotingCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "DURATIONTIME",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REQUIRED_SUM",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "addCandidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
    ],
    name: "addVoting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "candidates",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "startVoting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "stopVoting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_for",
        type: "address",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "votings",
    outputs: [
      {
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "maximumVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endsAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "started",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "ended",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b612019806200010e6000396000f3fe6080604052600436106100c25760003560e01c806375d0884d1161007f578063c57981b511610059578063c57981b51461024c578063e007ab2814610277578063e844d097146102a2578063f2fde38b146102cb576100c2565b806375d0884d146101b55780638da5cb5b146101de578063a598d03c14610209576100c2565b806302d947ef146100c757806307de066a146100e35780633477ee2e1461010e57806335c49a951461014c5780633d2f5bda14610175578063715018a61461019e575b600080fd5b6100e160048036038101906100dc9190611362565b6102f4565b005b3480156100ef57600080fd5b506100f861071c565b60405161010591906113b1565b60405180910390f35b34801561011a57600080fd5b50610135600480360381019061013091906113cc565b610727565b604051610143929190611575565b60405180910390f35b34801561015857600080fd5b50610173600480360381019061016e91906113cc565b61092d565b005b34801561018157600080fd5b5061019c600480360381019061019791906113cc565b610afa565b005b3480156101aa57600080fd5b506101b3610c26565b005b3480156101c157600080fd5b506101dc60048036038101906101d791906116f2565b610cae565b005b3480156101ea57600080fd5b506101f3610da1565b604051610200919061174a565b60405180910390f35b34801561021557600080fd5b50610230600480360381019061022b91906113cc565b610dca565b6040516102439796959493929190611808565b60405180910390f35b34801561025857600080fd5b50610261610ede565b60405161026e91906113b1565b60405180910390f35b34801561028357600080fd5b5061028c610ee3565b60405161029991906113b1565b60405180910390f35b3480156102ae57600080fd5b506102c960048036038101906102c491906113cc565b610eea565b005b3480156102d757600080fd5b506102f260048036038101906102ed919061187e565b610fcb565b005b662386f26fc10000341461033d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610334906118f7565b60405180910390fd5b60006001838154811061035357610352611917565b5b90600052602060002090600a020190508060050160009054906101000a900460ff166103b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab90611992565b60405180910390fd5b8060050160019054906101000a900460ff1615806103d55750806003015442105b610414576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040b906119fe565b60405180910390fd5b6104a6338260070180548060200260200160405190810160405280929190818152602001828054801561049c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610452575b50505050506110c3565b156104e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dd90611a6a565b60405180910390fd5b348160040160008282546104fa9190611ab9565b925050819055508060080160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061055390611b0f565b919050555080600701339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818160090160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600201548160080160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541061071757818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060080160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600201819055505b505050565b662386f26fc1000081565b6060806000600184815481106107405761073f611917565b5b90600052602060002090600a0201905060008160060180549050905060008167ffffffffffffffff811115610778576107776115c7565b5b6040519080825280602002602001820160405280156107a65781602001602082028036833780820191505090505b50905060008267ffffffffffffffff8111156107c5576107c46115c7565b5b6040519080825280602002602001820160405280156107f35781602001602082028036833780820191505090505b50905060005b8381101561091d5784600601818154811061081757610816611917565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682828151811061085557610854611917565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508460080160008383815181106108a8576108a7611917565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548382815181106108fe576108fd611917565b5b602002602001018181525050808061091590611b0f565b9150506107f9565b5080829550955050505050915091565b60006001828154811061094357610942611917565b5b90600052602060002090600a020190508060050160009054906101000a900460ff166109a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099b90611ba4565b60405180910390fd5b8060050160019054906101000a900460ff16156109f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ed90611c10565b60405180910390fd5b8060030154421015610a3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3490611c7c565b60405180910390fd5b60018160050160016101000a81548160ff02191690831515021790555060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166108fc6064600a8560040154610ab09190611c9c565b610aba9190611d25565b8460040154610ac99190611d56565b9081150290604051600060405180830381858888f19350505050158015610af4573d6000803e3d6000fd5b50505050565b610b0261114b565b73ffffffffffffffffffffffffffffffffffffffff16610b20610da1565b73ffffffffffffffffffffffffffffffffffffffff1614610b76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6d90611dd6565b60405180910390fd5b600060018281548110610b8c57610b8b611917565b5b90600052602060002090600a020190508060050160009054906101000a900460ff1615610bee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be590611e42565b60405180910390fd5b60018160050160006101000a81548160ff0219169083151502179055506203f48042610c1a9190611ab9565b81600301819055505050565b610c2e61114b565b73ffffffffffffffffffffffffffffffffffffffff16610c4c610da1565b73ffffffffffffffffffffffffffffffffffffffff1614610ca2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9990611dd6565b60405180910390fd5b610cac6000611153565b565b610cb661114b565b73ffffffffffffffffffffffffffffffffffffffff16610cd4610da1565b73ffffffffffffffffffffffffffffffffffffffff1614610d2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2190611dd6565b60405180910390fd5b6000600180816001815401808255809150500390600052602060002090600a0201905081816001019080519060200190610d65929190611217565b507f41c1219cd01860becf9f3ddc56312e9acb88894d5a0f0ed61c90f4561732d50382604051610d959190611e62565b60405180910390a15050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60018181548110610dda57600080fd5b90600052602060002090600a02016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054610e2390611eb3565b80601f0160208091040260200160405190810160405280929190818152602001828054610e4f90611eb3565b8015610e9c5780601f10610e7157610100808354040283529160200191610e9c565b820191906000526020600020905b815481529060010190602001808311610e7f57829003601f168201915b5050505050908060020154908060030154908060040154908060050160009054906101000a900460ff16908060050160019054906101000a900460ff16905087565b600a81565b6203f48081565b600060018281548110610f0057610eff611917565b5b90600052602060002090600a020190508060050160009054906101000a900460ff1615610f62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5990611f31565b60405180910390fd5b80600601339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b610fd361114b565b73ffffffffffffffffffffffffffffffffffffffff16610ff1610da1565b73ffffffffffffffffffffffffffffffffffffffff1614611047576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103e90611dd6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156110b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ae90611fc3565b60405180910390fd5b6110c081611153565b50565b600080600090505b825181101561113f578373ffffffffffffffffffffffffffffffffffffffff168382815181106110fe576110fd611917565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16141561112c576001915050611145565b808061113790611b0f565b9150506110cb565b50600090505b92915050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b82805461122390611eb3565b90600052602060002090601f016020900481019282611245576000855561128c565b82601f1061125e57805160ff191683800117855561128c565b8280016001018555821561128c579182015b8281111561128b578251825591602001919060010190611270565b5b509050611299919061129d565b5090565b5b808211156112b657600081600090555060010161129e565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6112e1816112ce565b81146112ec57600080fd5b50565b6000813590506112fe816112d8565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061132f82611304565b9050919050565b61133f81611324565b811461134a57600080fd5b50565b60008135905061135c81611336565b92915050565b60008060408385031215611379576113786112c4565b5b6000611387858286016112ef565b92505060206113988582860161134d565b9150509250929050565b6113ab816112ce565b82525050565b60006020820190506113c660008301846113a2565b92915050565b6000602082840312156113e2576113e16112c4565b5b60006113f0848285016112ef565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61142e81611324565b82525050565b60006114408383611425565b60208301905092915050565b6000602082019050919050565b6000611464826113f9565b61146e8185611404565b935061147983611415565b8060005b838110156114aa5781516114918882611434565b975061149c8361144c565b92505060018101905061147d565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6114ec816112ce565b82525050565b60006114fe83836114e3565b60208301905092915050565b6000602082019050919050565b6000611522826114b7565b61152c81856114c2565b9350611537836114d3565b8060005b8381101561156857815161154f88826114f2565b975061155a8361150a565b92505060018101905061153b565b5085935050505092915050565b6000604082019050818103600083015261158f8185611459565b905081810360208301526115a38184611517565b90509392505050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6115ff826115b6565b810181811067ffffffffffffffff8211171561161e5761161d6115c7565b5b80604052505050565b60006116316112ba565b905061163d82826115f6565b919050565b600067ffffffffffffffff82111561165d5761165c6115c7565b5b611666826115b6565b9050602081019050919050565b82818337600083830152505050565b600061169561169084611642565b611627565b9050828152602081018484840111156116b1576116b06115b1565b5b6116bc848285611673565b509392505050565b600082601f8301126116d9576116d86115ac565b5b81356116e9848260208601611682565b91505092915050565b600060208284031215611708576117076112c4565b5b600082013567ffffffffffffffff811115611726576117256112c9565b5b611732848285016116c4565b91505092915050565b61174481611324565b82525050565b600060208201905061175f600083018461173b565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561179f578082015181840152602081019050611784565b838111156117ae576000848401525b50505050565b60006117bf82611765565b6117c98185611770565b93506117d9818560208601611781565b6117e2816115b6565b840191505092915050565b60008115159050919050565b611802816117ed565b82525050565b600060e08201905061181d600083018a61173b565b818103602083015261182f81896117b4565b905061183e60408301886113a2565b61184b60608301876113a2565b61185860808301866113a2565b61186560a08301856117f9565b61187260c08301846117f9565b98975050505050505050565b600060208284031215611894576118936112c4565b5b60006118a28482850161134d565b91505092915050565b7f73756d20646f6e277420657175616c2070726963650000000000000000000000600082015250565b60006118e1601583611770565b91506118ec826118ab565b602082019050919050565b60006020820190508181036000830152611910816118d4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f6e6f742073746172746564210000000000000000000000000000000000000000600082015250565b600061197c600c83611770565b915061198782611946565b602082019050919050565b600060208201905081810360008301526119ab8161196f565b9050919050565b7f68617320656e6465640000000000000000000000000000000000000000000000600082015250565b60006119e8600983611770565b91506119f3826119b2565b602082019050919050565b60006020820190508181036000830152611a17816119db565b9050919050565b7f616c726561647920766f74650000000000000000000000000000000000000000600082015250565b6000611a54600c83611770565b9150611a5f82611a1e565b602082019050919050565b60006020820190508181036000830152611a8381611a47565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ac4826112ce565b9150611acf836112ce565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611b0457611b03611a8a565b5b828201905092915050565b6000611b1a826112ce565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611b4d57611b4c611a8a565b5b600182019050919050565b7f646f6e2774207374617274656400000000000000000000000000000000000000600082015250565b6000611b8e600d83611770565b9150611b9982611b58565b602082019050919050565b60006020820190508181036000830152611bbd81611b81565b9050919050565b7f646f6e277420656e646564000000000000000000000000000000000000000000600082015250565b6000611bfa600b83611770565b9150611c0582611bc4565b602082019050919050565b60006020820190508181036000830152611c2981611bed565b9050919050565b7f63616e27742073746f7000000000000000000000000000000000000000000000600082015250565b6000611c66600a83611770565b9150611c7182611c30565b602082019050919050565b60006020820190508181036000830152611c9581611c59565b9050919050565b6000611ca7826112ce565b9150611cb2836112ce565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611ceb57611cea611a8a565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611d30826112ce565b9150611d3b836112ce565b925082611d4b57611d4a611cf6565b5b828204905092915050565b6000611d61826112ce565b9150611d6c836112ce565b925082821015611d7f57611d7e611a8a565b5b828203905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611dc0602083611770565b9150611dcb82611d8a565b602082019050919050565b60006020820190508181036000830152611def81611db3565b9050919050565b7f7374617274656400000000000000000000000000000000000000000000000000600082015250565b6000611e2c600783611770565b9150611e3782611df6565b602082019050919050565b60006020820190508181036000830152611e5b81611e1f565b9050919050565b60006020820190508181036000830152611e7c81846117b4565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611ecb57607f821691505b60208210811415611edf57611ede611e84565b5b50919050565b7f7374617274000000000000000000000000000000000000000000000000000000600082015250565b6000611f1b600583611770565b9150611f2682611ee5565b602082019050919050565b60006020820190508181036000830152611f4a81611f0e565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611fad602683611770565b9150611fb882611f51565b604082019050919050565b60006020820190508181036000830152611fdc81611fa0565b905091905056fea264697066735822122060980ab20ef541e39b3ff0a3752a7893c1248a40d99324055949403204f7c21964736f6c634300080b0033";

type AucEngineConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AucEngineConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AucEngine__factory extends ContractFactory {
  constructor(...args: AucEngineConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AucEngine> {
    return super.deploy(overrides || {}) as Promise<AucEngine>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AucEngine {
    return super.attach(address) as AucEngine;
  }
  override connect(signer: Signer): AucEngine__factory {
    return super.connect(signer) as AucEngine__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AucEngineInterface {
    return new utils.Interface(_abi) as AucEngineInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AucEngine {
    return new Contract(address, _abi, signerOrProvider) as AucEngine;
  }
}
